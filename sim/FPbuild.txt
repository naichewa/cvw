Procedure for Runnning SoftFloat/TestFloat with Wally

1.) First, compile SoftFloat and TestFloat by going to the addins
directory and finding the specific build directory (e.g.,
Linux_x86_64-GCC.  Currently, we are using v3e of
SoftFloat/TestFloat.  I am not sure of the order, but I always compile
SoftFloat first as I believe TestFloat uses the static library
SoftFloat creates.

2.) Once compiled both, go to the tests/fp directory and run the
create_vectors.sh Linux script.  In the past, we have automated this,
but I believe this has fallen into more of a manual state lately.

3.) Then, run remove_spaces.sh which will remove spaces from the
output and put underscores between vectors (this helps differentiate
the vectors that are generated).  Again, this can be combined with
Step 2.

4.) TestFloat is run from wally/cvw/sim and sim-testfloat-batch with
its respective test.  The format is ./sim-testfloat-add add.  All of
the tests are listed below.  This can be augmented or added to for
other FP tests given by the great SoftFloat/TestFloat output.

 cvtint - test integer conversion unit (fcvtint)
 cvtfp  - test floating-point conversion unit (fcvtfp)
 cmp    - test comparison unit's LT, LE, EQ opperations (fcmp)
 add    - test addition
 fma    - test fma
 mul    - test mult with fma
 sub    - test subtraction
 div    - test division
 sqrt   - test square root
 all    - test everything

4a.) Each test will test all its vectors - if you want to test a
subset of the vectors (e.g., only binary16), you should modify the
testfloat.do in the sim directory.  Change the TEST_SIZE="all" to the
specific test you want to run.  For example, if you want to run only
binary16, you should set this variable to TEST_SIZE="HP".

4b.) If you want to turn off the generation of wlf files while running
sim-testfloat-batch, you can modify testfloat.do in the sim
directory.  Inside this DO file, modify the WAV file to 0 --> i.e.,
set "quietly set WAV 0;"












